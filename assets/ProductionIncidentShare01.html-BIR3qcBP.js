import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as t,o as n}from"./app-Ble-gPYH.js";const l={};function h(e,i){return n(),a("div",null,i[0]||(i[0]=[t(`<h1 id="生产事故分享01-redis缓存过期时间设置不当导致的线上故障" tabindex="-1"><a class="header-anchor" href="#生产事故分享01-redis缓存过期时间设置不当导致的线上故障"><span>生产事故分享01：Redis缓存过期时间设置不当导致的线上故障</span></a></h1><h2 id="📋-事故概览" tabindex="-1"><a class="header-anchor" href="#📋-事故概览"><span>📋 事故概览</span></a></h2><table><thead><tr><th>项目</th><th>详情</th></tr></thead><tbody><tr><td><strong>故障时间</strong></td><td>2025年X月X日 XX:XX - XX:XX</td></tr><tr><td><strong>影响时长</strong></td><td>约10分钟</td></tr><tr><td><strong>故障等级</strong></td><td>P1（严重）</td></tr><tr><td><strong>影响范围</strong></td><td>某商品详情页面全部用户</td></tr><tr><td><strong>故障现象</strong></td><td>用户请求商品详情页面时系统响应&quot;商品不存在&quot;异常</td></tr></tbody></table><h2 id="🎯-需求背景" tabindex="-1"><a class="header-anchor" href="#🎯-需求背景"><span>🎯 需求背景</span></a></h2><p>商品详情页面采用Redis缓存优化策略：</p><ul><li>使用Redis Hash结构存储商品详情数据</li><li>缓存Key根据请求参数动态构建</li><li>缓存命中时直接返回，未命中时查询数据库并更新缓存</li></ul><h2 id="🔍-问题排查过程" tabindex="-1"><a class="header-anchor" href="#🔍-问题排查过程"><span>🔍 问题排查过程</span></a></h2><h3 id="详细排查步骤" tabindex="-1"><a class="header-anchor" href="#详细排查步骤"><span>详细排查步骤</span></a></h3><ol><li><p><strong>日志分析</strong></p><ul><li>根据用户tid搜索日志</li><li>发现只有第一次请求有错误日志，后续都命中缓存</li></ul></li><li><p><strong>缓存数据确认</strong></p><ul><li>确认Redis中存在异常数据</li><li>后续10分钟的请求都命中了这个异常缓存</li></ul></li><li><p><strong>代码逻辑梳理</strong></p><ul><li>发现为防止恶意请求，异常结果也会被缓存</li><li>异常数据缓存10秒，正常数据缓存10分钟</li></ul></li><li><p><strong>根因定位</strong></p><ul><li>发现<code>expires</code>操作影响整个Map的过期时间</li><li>缓存Key构建逻辑不完整，导致Key冲突</li></ul></li></ol><h2 id="🐛-问题根因分析" tabindex="-1"><a class="header-anchor" href="#🐛-问题根因分析"><span>🐛 问题根因分析</span></a></h2><h3 id="问题代码" tabindex="-1"><a class="header-anchor" href="#问题代码"><span>问题代码</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 问题代码示例</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> cacheData</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Object</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> boolean</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> isException) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 将数据放入缓存中</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    redisOperation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">hset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(mapKey, key, value);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 更新缓存过期时间 - 这里是问题所在！</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> expireSecond </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> isException </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> :</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 600</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    redisOperation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">expire</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(mapKey, expireSecond);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 影响整个Map！</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="问题流程图" tabindex="-1"><a class="header-anchor" href="#问题流程图"><span>问题流程图</span></a></h3><img src="https://www.plantuml.com/plantuml/svg/TP5FJy8m78Rl_HJbDcvuyR0THA_63x748Kl6MDWyU5DY02D4o43G4KWm4XF3Xj70tC1zcVNFleN5JhEBlJJfqpnztr-BfYNNhFEA1d9MMQaeqD1aLGVWvnW0aVHVS6jzYEvwoUKLsjIHxrDlZT_g4cFl8GcdP6EZnOWZF5ZYZiiGTR_8rZsH3HeryNYAXwja-17xmLx1bFwiHzoA5qyPgrg20bSUAnV4yL6tVP27B9iE1JpoyW2o9QBUDlON_55-M-A0HdtaJ58GsdWovi2qgWPGD5E10khEKmkUFbDlnaEZm4uLtCTJ_HRYxdzAxHTshNPNzAgbm9fwLhP4IAE7fDccymPnxkEW4N_UefiEURnc8-2Yj4bcS7JsYi9LCeXGQxcJvhBPzLEr18fiOv_r3G00" alt=""><h3 id="根因总结" tabindex="-1"><a class="header-anchor" href="#根因总结"><span>根因总结</span></a></h3><ol><li><strong>Redis操作误区</strong>：<code>expire</code>命令作用于整个Map，而非单个field</li><li><strong>缓存Key设计缺陷</strong>：Key构建时遗漏关键参数，导致不同请求共享缓存</li><li><strong>异常处理逻辑问题</strong>：异常数据的短期缓存被正常数据的长期缓存覆盖</li></ol><h2 id="💡-解决方案" tabindex="-1"><a class="header-anchor" href="#💡-解决方案"><span>💡 解决方案</span></a></h2><h3 id="临时解决方案" tabindex="-1"><a class="header-anchor" href="#临时解决方案"><span>临时解决方案</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 立即清理问题缓存</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">redis-cli</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> DEL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> problematic_cache_key</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 重启相关服务实例</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="永久解决方案" tabindex="-1"><a class="header-anchor" href="#永久解决方案"><span>永久解决方案</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 完善缓存Key构建逻辑</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> buildCacheKey</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">RequestParam</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> param) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">format</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;%s:%s:%s&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        param</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getA</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(), </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        param</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getB</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(), </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        param</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getC</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">());</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 包含所有关键参数</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="📚-经验总结" tabindex="-1"><a class="header-anchor" href="#📚-经验总结"><span>📚 经验总结</span></a></h2><h3 id="🎯-核心教训" tabindex="-1"><a class="header-anchor" href="#🎯-核心教训"><span>🎯 核心教训</span></a></h3><ol><li><p><strong>Redis数据结构理解</strong></p><ul><li><code>EXPIRE</code>命令作用于整个Key，不是Hash的单个field</li><li>需要根据业务场景选择合适的数据结构</li></ul></li><li><p><strong>缓存设计原则</strong></p><ul><li>异常数据和正常数据应该分离存储</li><li>缓存Key设计要包含所有影响结果的参数</li><li>避免不同类型数据共享缓存空间</li></ul></li><li><p><strong>故障排查方法</strong></p><ul><li>日志 + 代码 + 缓存数据三重验证</li><li>时间线梳理有助于快速定位问题</li></ul></li></ol><h3 id="🛠️-改进措施" tabindex="-1"><a class="header-anchor" href="#🛠️-改进措施"><span>🛠️ 改进措施</span></a></h3><table><thead><tr><th>改进项</th><th>具体措施</th><th>负责人</th><th>完成时间</th></tr></thead><tbody><tr><td><strong>代码规范</strong></td><td>制定Redis使用规范文档</td><td>架构师</td><td>1周内</td></tr><tr><td><strong>Code Review</strong></td><td>缓存相关代码强制Review</td><td>Tech Lead</td><td>立即执行</td></tr><tr><td><strong>监控告警</strong></td><td>增加缓存异常数据监控</td><td>运维团队</td><td>2周内</td></tr><tr><td><strong>单元测试</strong></td><td>补充缓存逻辑单元测试</td><td>开发团队</td><td>1周内</td></tr></tbody></table><h3 id="🔧-最佳实践" tabindex="-1"><a class="header-anchor" href="#🔧-最佳实践"><span>🔧 最佳实践</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 推荐的缓存设计模式</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Component</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> ProductCacheManager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 正常数据缓存</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> NORMAL_CACHE_PREFIX </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;product:normal:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 异常数据缓存</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> EXCEPTION_CACHE_PREFIX </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;product:exception:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> cacheProductData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">ProductData</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> cacheKey</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> NORMAL_CACHE_PREFIX </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> key;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        redisTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">opsForValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(cacheKey, data, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">Duration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ofMinutes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> cacheExceptionData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> errorMsg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">        String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> cacheKey</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> EXCEPTION_CACHE_PREFIX </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> key;</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">        redisTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">opsForValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(cacheKey, errorMsg, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">Duration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ofSeconds</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 构建完整的缓存Key</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> buildCacheKey</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">ProductRequest</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> DigestUtils</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">md5Hex</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">            request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getProductId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">            request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getUserType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">            request</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getRegion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="📋-预防检查清单" tabindex="-1"><a class="header-anchor" href="#📋-预防检查清单"><span>📋 预防检查清单</span></a></h3><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> Redis命令是否正确理解其作用范围？</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> 缓存Key是否包含所有相关参数？</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> 异常数据和正常数据是否分离存储？</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> 是否有足够的监控和告警？</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" disabled="disabled"><label class="task-list-item-label" for="task-item-4"> 是否有完善的单元测试覆盖？</label></li></ul><hr><p><strong>反思</strong>：这次事故提醒我们，对于基础组件的理解不能停留在表面，需要深入理解其工作原理。同时，完善的测试和监控体系是预防此类问题的关键。</p>`,32)]))}const r=s(l,[["render",h]]),d=JSON.parse('{"path":"/posts/incident/ProductionIncidentShare01.html","title":"生产事故分享01：Redis缓存过期时间设置不当导致的线上故障","lang":"en-US","frontmatter":{"title":"生产事故分享01：Redis缓存过期时间设置不当导致的线上故障","category":["生产事故"],"tag":["事故分析","经验总结","Redis缓存","故障排查"],"order":1,"description":"生产事故分享01：Redis缓存过期时间设置不当导致的线上故障 📋 事故概览 🎯 需求背景 商品详情页面采用Redis缓存优化策略： 使用Redis Hash结构存储商品详情数据 缓存Key根据请求参数动态构建 缓存命中时直接返回，未命中时查询数据库并更新缓存 🔍 问题排查过程 详细排查步骤 日志分析 根据用户tid搜索日志 发现只有第一次请求有...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"生产事故分享01：Redis缓存过期时间设置不当导致的线上故障\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-30T16:02:20.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LiLiuMing\\",\\"url\\":\\"https://liliuming-truism.github.io\\"}]}"],["meta",{"property":"og:url","content":"https://liliuming-truism.github.io/posts/incident/ProductionIncidentShare01.html"}],["meta",{"property":"og:site_name","content":"一个程序员的自我修养"}],["meta",{"property":"og:title","content":"生产事故分享01：Redis缓存过期时间设置不当导致的线上故障"}],["meta",{"property":"og:description","content":"生产事故分享01：Redis缓存过期时间设置不当导致的线上故障 📋 事故概览 🎯 需求背景 商品详情页面采用Redis缓存优化策略： 使用Redis Hash结构存储商品详情数据 缓存Key根据请求参数动态构建 缓存命中时直接返回，未命中时查询数据库并更新缓存 🔍 问题排查过程 详细排查步骤 日志分析 根据用户tid搜索日志 发现只有第一次请求有..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-30T16:02:20.000Z"}],["meta",{"property":"article:tag","content":"故障排查"}],["meta",{"property":"article:tag","content":"Redis缓存"}],["meta",{"property":"article:tag","content":"经验总结"}],["meta",{"property":"article:tag","content":"事故分析"}],["meta",{"property":"article:modified_time","content":"2025-06-30T16:02:20.000Z"}]]},"git":{"createdTime":1749373220000,"updatedTime":1751299340000,"contributors":[{"name":"liuming.li","username":"","email":"liumingli15@163.com","commits":2}]},"readingTime":{"minutes":3.92,"words":1175},"filePathRelative":"posts/incident/ProductionIncidentShare01.md","excerpt":"\\n<h2>📋 事故概览</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>项目</th>\\n<th>详情</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><strong>故障时间</strong></td>\\n<td>2025年X月X日 XX:XX - XX:XX</td>\\n</tr>\\n<tr>\\n<td><strong>影响时长</strong></td>\\n<td>约10分钟</td>\\n</tr>\\n<tr>\\n<td><strong>故障等级</strong></td>\\n<td>P1（严重）</td>\\n</tr>\\n<tr>\\n<td><strong>影响范围</strong></td>\\n<td>某商品详情页面全部用户</td>\\n</tr>\\n<tr>\\n<td><strong>故障现象</strong></td>\\n<td>用户请求商品详情页面时系统响应\\"商品不存在\\"异常</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{r as comp,d as data};
